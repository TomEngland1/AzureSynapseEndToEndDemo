{
	"name": "Landing zone to lake child",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "BinaryReadSettings",
							"compressionProperties": {
								"type": "ZipDeflateReadSettings"
							}
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"copyBehavior": "FlattenHierarchy"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "Binary1",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.Container",
								"type": "Expression"
							},
							"directory": {
								"value": "@pipeline().parameters.LandingZone",
								"type": "Expression"
							},
							"filename": {
								"value": "@pipeline().parameters.ZipFilename",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Binary2",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.Container",
								"type": "Expression"
							},
							"directory": {
								"value": "@concat(pipeline().parameters.LakeFolder,'/',pipeline().parameters.DatasetName,'/',pipeline().parameters.LakePath)",
								"type": "Expression"
							},
							"filename": {
								"value": "@coalesce(null)",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "SQL pool stored procedure",
				"type": "SqlPoolStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"sqlPool": {
					"referenceName": "synapsedemodw",
					"type": "SqlPoolReference"
				},
				"typeProperties": {
					"storedProcedureName": "mgmt.usp_InsertRawLog ",
					"storedProcedureParameters": {
						"PayloadID": {
							"value": {
								"value": "@pipeline().parameters.PayloadID",
								"type": "Expression"
							},
							"type": "String"
						},
						"LakeFolder": {
							"value": {
								"value": "@pipeline().parameters.LakeFolder",
								"type": "Expression"
							},
							"type": "String"
						},
						"PayloadFileName": {
							"value": {
								"value": "@pipeline().parameters.ZipFilename",
								"type": "Expression"
							},
							"type": "String"
						},
						"LakePath": {
							"value": {
								"value": "@concat(pipeline().parameters.DatasetName,'/',pipeline().parameters.LakePath)",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				}
			}
		],
		"parameters": {
			"LakePath": {
				"type": "string"
			},
			"DatasetName": {
				"type": "string"
			},
			"ZipFilename": {
				"type": "string"
			},
			"LakeFolder": {
				"type": "string"
			},
			"LandingZone": {
				"type": "string"
			},
			"Container": {
				"type": "string"
			},
			"PayloadID": {
				"type": "string"
			},
			"PayloadFileType": {
				"type": "string"
			}
		},
		"variables": {
			"test": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Landing zone to data lake"
		},
		"annotations": [],
		"lastPublishTime": "2024-02-22T13:02:50Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}